version: '3.1'

services:

  mongo:
    image: mongo:4.0.13-xenial
    container_name: mongodb_container
    restart: always
    command: mongod
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - app_network

  flask_app:  
    build:
      context: ../app1
    container_name: flask_app_container
    ports:
      - "5000:5000"
    environment:
      MONGO_URI: "mongodb://root:example@mongo:27017/"
    networks:
      - app_network
    depends_on:
      - mongo


  flask_app_2:
    build:
      context: ../app2
    container_name: flask_app_2_container
    restart: always
    ports:
      - "5001:5000"
    networks:
      - app_network
    command: python /app/app2.py
  
  nginx:
    image: nginx:latest
    container_name: nginx_load_balancer
    restart: always
    ports:
      - "80:80"
    networks:
      - app_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  
    depends_on:
      - flask_app
      - flask_app_2

networks:
  app_network:
    driver: bridge



